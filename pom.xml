<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.roy</groupId>
  <artifactId>jfinal</artifactId>
  <version>1.0-SNAPSHOT</version>
  <!--<packaging>war</packaging>-->
    <packaging>jar</packaging>

  <name>jfinal Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>jfinal-undertow</artifactId>
      <version>1.6</version>
    </dependency>

    <dependency>
      <groupId>com.jfinal</groupId>
      <artifactId>jfinal</artifactId>
      <version>4.0</version>
    </dependency>

    <dependency>
      <groupId>io.undertow</groupId>
      <artifactId>undertow-websockets-jsr</artifactId>
      <version>2.0.19.Final</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.14</version>
    </dependency>

    <!--mysql 数据库驱动 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.46</version>
    </dependency>


  </dependencies>

  <build>
    <finalName>jfinal</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!--
            jar 包中的配置文件优先级高于 config 目录下的 "同名文件"
            因此，打包时需要排除掉 jar 包中来自 src/main/resources 目录的
            配置文件，否则部署时 config 目录中的同名配置文件不会生效
         -->
        <!--<plugin>-->
          <!--<groupId>org.apache.maven.plugins</groupId>-->
          <!--<artifactId>maven-jar-plugin</artifactId>-->
          <!--<version>2.6</version>-->
          <!--<configuration>-->
            <!--<excludes>-->
              <!--<exclude>*.txt</exclude>-->
              <!--<exclude>*.xml</exclude>-->
              <!--<exclude>*.properties</exclude>-->
            <!--</excludes>-->
          <!--</configuration>-->
        <!--</plugin>-->
        <!--&lt;!&ndash;-->
            <!--使用 mvn clean package 打包-->
            <!--更多配置可参考官司方文档：http://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html-->
        <!--&ndash;&gt;-->
        <!--<plugin>-->
          <!--<groupId>org.apache.maven.plugins</groupId>-->
          <!--<artifactId>maven-assembly-plugin</artifactId>-->
          <!--<version>3.1.0</version>-->
          <!--<executions>-->
            <!--<execution>-->
              <!--<id>make-assembly</id>-->
              <!--<phase>package</phase>-->
              <!--<goals>-->
                <!--<goal>single</goal>-->
              <!--</goals>-->

              <!--<configuration>-->
                <!--&lt;!&ndash; 打包生成的文件名 &ndash;&gt;-->
                <!--<finalName>${project.artifactId}</finalName>-->
                <!--&lt;!&ndash; jar 等压缩文件在被打包进入 zip、tar.gz 时是否压缩，设置为 false 可加快打包速度 &ndash;&gt;-->
                <!--<recompressZippedFiles>false</recompressZippedFiles>-->
                <!--&lt;!&ndash; 打包生成的文件是否要追加 release.xml 中定义的 id 值 &ndash;&gt;-->
                <!--<appendAssemblyId>true</appendAssemblyId>-->
                <!--&lt;!&ndash; 指向打包描述文件 package.xml &ndash;&gt;-->
                <!--<descriptors>-->
                  <!--<descriptor>package.xml</descriptor>-->
                <!--</descriptors>-->
                <!--&lt;!&ndash; 打包结果输出的基础目录 &ndash;&gt;-->
                <!--<outputDirectory>${project.build.directory}/</outputDirectory>-->
              <!--</configuration>-->
            <!--</execution>-->
          <!--</executions>-->
        <!--</plugin>-->

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
                <encoding>UTF-8</encoding>
                <!-- java8 保留参数名编译参数 -->
                <compilerArgument>-parameters</compilerArgument>
            </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
